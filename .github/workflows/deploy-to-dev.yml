name: 'CD: Deploy to Dev Domain'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Vercel Dev Domain
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.3

      - name: Install Vercel CLI
        run: pnpm i --global vercel@latest

      - name: Pull Vercel Environment Information
        run: |
          vercel pull --yes --environment=development --token=${{ secrets.VERCEL_TOKEN }}
          cp .vercel/.env.development.local .env.local

      # By default the `vercel build` command will build `preview` artifacts
      # that can later be used to deploy to `preview` deployments.
      #
      # Running `vercel build` will result in `next build` being ran.
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      # By default the `vercel deploy` command will deploy to `preview`. By
      # using the `--prebuilt` option - in conjunction with the `vercel build`
      # command - this will allow us to deploy to Vercel without the need to
      # share any source code.
      #
      # Note that even though the env vars we pulled have `NEXTAUTH_URL` and
      # `AUTH_REDIRECT_PROXY_URL` defined when we deploy it will pull them from
      # the `preview` env vars setup in Vercel since `vercel deploy` is
      # defaulting to a `preview` deployment. If we don't see them here as
      # runtime env vars when we deploy then after we log in through Vercel to
      # access the protected deployment domain (dev.boost.polyverse.com) it will
      # redirect us to `preview.boost.polyverse.com` based on it pulling\
      # `preview` env vars by default when running.
      - name: Deploy Project Artifacts to Vercel
        run: |
          export KV_REST_API_TOKEN=$(grep '^KV_REST_API_TOKEN=' .env.local | cut -d '=' -f2- | sed -e 's/^"//' -e 's/"$//' -e "s/^'//" -e "s/'$//")
          export KV_REST_API_URL=$(grep '^KV_REST_API_URL=' .env.local | cut -d '=' -f2- | sed -e 's/^"//' -e 's/"$//' -e "s/^'//" -e "s/'$//")
          vercel deploy --env NEXTAUTH_URL="https://dev.boost.polyverse.com/" \
            --env AUTH_REDIRECT_PROXY_URL="https://dev.boost.polyverse.com/api/auth" \
            --env SARA_STAGE="dev" \
            --env KV_REST_API_TOKEN="$KV_REST_API_TOKEN" \
            --env KV_REST_API_URL="$KV_REST_API_URL" \
            --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
