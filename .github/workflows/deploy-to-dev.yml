name: "CD: Deploy to Dev Domain"

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  APP_ENV: development


on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Vercel Dev Domain
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: main

      # Note that while our Lambda backend uses Node 20 and Vercel also has
      # support for it it is currently in beta - thus use 18 for now
      - name: Setup Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install Vercel CLI
        run: pnpm i --global vercel@latest

      - name: Pull Vercel Environment Information
        run: |
          vercel pull --yes --environment=development --token=${{ secrets.VERCEL_TOKEN }}
          cat .vercel/.env.development.local
          cat .vercel/project.json
          mkdir config
          cp .vercel/.env.development.local config/.env.development
          #cp .vercel/.env.development.local .env.local

      # By default the `vercel build` command will build `preview` artifacts
      # that can later be used to deploy to `preview` deployments.
      #
      # Running `vercel build` will result in `next build` being ran.
      - name: Build Project Artifacts
        run: |
          export APP_ENV=development
          vercel build --token=${{ secrets.VERCEL_TOKEN }}

      # By default the `vercel deploy` command will deploy to `preview`. By
      # using the `--prebuilt` option - in conjunction with the `vercel build`
      # command - this will allow us to deploy to Vercel without the need to
      # share any source code.
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --env NEXTAUTH_URL="https://dev.boost.polyverse.com/" --env APP_ENV=development --env AUTH_REDIRECT_PROXY_URL="https://dev.boost.polyverse.com/api/auth" -f -d --prebuilt --token=${{ secrets.VERCEL_TOKEN }}